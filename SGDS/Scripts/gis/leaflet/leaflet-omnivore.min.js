!function(n){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self);t.omnivore=n()}}(function(){var t;return function i(n,t,r){function u(f,o){var h,c,s;if(!t[f]){if(!n[f]){if(h=typeof require=="function"&&require,!o&&h)return h(f,!0);if(e)return e(f,!0);c=new Error("Cannot find module '"+f+"'");throw c.code="MODULE_NOT_FOUND",c;}s=t[f]={exports:{}};n[f][0].call(s.exports,function(t){var i=n[f][1][t];return u(i?i:t)},s,s.exports,i,n,t,r)}return t[f].exports}for(var e=typeof require=="function"&&require,f=0;f<r.length;f++)u(r[f]);return u}({1:[function(n,t){function i(n,t){"addData"in n&&n.addData(t);"setGeoJSON"in n&&n.setGeoJSON(t)}function w(n,t,u){var f=u||L.geoJson();return r(n,function(n,t){if(n)return f.fire("error",{error:n});i(f,JSON.parse(t.responseText));f.fire("ready")}),f}function b(n,t,i){function e(n,i){if(n)return u.fire("error",{error:n});f(i.responseText,t,u);u.fire("ready")}var u=i||L.geoJson();return r(n,e),u}function k(n,t,i){function f(n,i){function f(){r=!0}var r;if(n)return u.fire("error",{error:n});u.on("error",f);e(i.responseText,t,u);u.off("error",f);r||u.fire("ready")}var u=i||L.geoJson();return r(n,f),u}function d(n,t,i){function f(n,i){function f(){r=!0}var r;if(n)return u.fire("error",{error:n});u.on("error",f);o(i.responseXML||i.responseText,t,u);u.off("error",f);r||u.fire("ready")}var u=i||L.geoJson();return r(n,f),u}function g(n,t,i){function f(n,i){function f(){r=!0}var r;if(n)return u.fire("error",{error:n});u.on("error",f);s(i.responseXML||i.responseText,t,u);u.off("error",f);r||u.fire("ready")}var u=i||L.geoJson();return r(n,f),u}function nt(n,t,i){function f(n,i){if(n)return u.fire("error",{error:n});c(i.responseText,t,u);u.fire("ready")}var u=i||L.geoJson();return r(n,f),u}function tt(n,t,i){function f(n,i){if(n)return u.fire("error",{error:n});h(i.responseText,t,u);u.fire("ready")}var u=i||L.geoJson();return r(n,f),u}function f(n,t,r){var f=typeof n=="string"?JSON.parse(n):n,e,u;r=r||L.geoJson();for(e in f.objects)u=p.feature(f,f.objects[e]),u.features?i(r,u.features):i(r,u);return r}function e(n,t,r){function u(n,t){if(n)return r.fire("error",{error:n});i(r,t)}return r=r||L.geoJson(),t=t||{},a.csv2geojson(n,t,u),r}function o(n,t,r){var f=l(n),e;return f?(r=r||L.geoJson(),e=u.gpx(f),i(r,e),r):r.fire("error",{error:"Could not parse GPX"})}function s(n,t,r){var f=l(n),e;return f?(r=r||L.geoJson(),e=u.kml(f),i(r,e),r):r.fire("error",{error:"Could not parse KML"})}function h(n,t,r){var f,e,u;for(r=r||L.geoJson(),t=t||{},f=y.decode(n,t.precision),e={type:"LineString",coordinates:[]},u=0;u<f.length;u++)e.coordinates[u]=[f[u][1],f[u][0]];return i(r,e),r}function c(n,t,r){r=r||L.geoJson();var u=v(n);return i(r,u),r}function l(n){return typeof n=="string"?(new DOMParser).parseFromString(n,"text/xml"):n}var r=n("corslite"),a=n("csv2geojson"),v=n("wellknown"),y=n("polyline"),p=n("topojson/topojson.js"),u=n("togeojson");t.exports.polyline=tt;t.exports.polyline.parse=h;t.exports.geojson=w;t.exports.topojson=b;t.exports.topojson.parse=f;t.exports.csv=k;t.exports.csv.parse=e;t.exports.gpx=d;t.exports.gpx.parse=o;t.exports.kml=g;t.exports.kml.parse=s;t.exports.wkt=nt;t.exports.wkt.parse=c},{corslite:5,csv2geojson:6,polyline:9,togeojson:10,"topojson/topojson.js":11,wellknown:12}],2:[function(){},{}],3:[function(n,t){t.exports=n(2)},{"/Users/tmcw/src/leaflet-omnivore/node_modules/browserify/lib/_empty.js":2}],4:[function(n,t){function r(){}var i=t.exports={};i.nextTick=function(){var r=typeof window!="undefined"&&window.setImmediate,u=typeof window!="undefined"&&window.MutationObserver,f=typeof window!="undefined"&&window.postMessage&&window.addEventListener,n,t,i;return r?function(n){return window.setImmediate(n)}:(n=[],u)?(t=document.createElement("div"),i=new MutationObserver(function(){var t=n.slice();n.length=0;t.forEach(function(n){n()})}),i.observe(t,{attributes:!0}),function(i){n.length||t.setAttribute("yes","no");n.push(i)}):f?(window.addEventListener("message",function(t){var i=t.source,r;(i===window||i===null)&&t.data==="process-tick"&&(t.stopPropagation(),n.length>0&&(r=n.shift(),r()))},!0),function(t){n.push(t);window.postMessage("process-tick","*")}):function(n){setTimeout(n,0)}}();i.title="browser";i.browser=!0;i.env={};i.argv=[];i.on=r;i.addListener=r;i.once=r;i.off=r;i.removeListener=r;i.removeAllListeners=r;i.emit=r;i.binding=function(){throw new Error("process.binding is not supported");};i.cwd=function(){return"/"};i.chdir=function(){throw new Error("process.chdir is not supported");}},{}],5:[function(n,t){function i(n,t,i){function s(n){return n>=200&&n<300||n===304}function o(){r.status===undefined||s(r.status)?t.call(r,null,r):t.call(r,r,null)}var e=!1,u,r,f;return typeof XMLHttpRequest=="undefined"?t(Error("Browser not supported")):(typeof i=="undefined"&&(u=n.match(/^\s*https?:\/\/[^\/]*/),i=u&&u[0]!==location.protocol+"//"+location.domain+(location.port?":"+location.port:"")),r=new window.XMLHttpRequest,!i||"withCredentials"in r||(r=new window.XDomainRequest,f=t,t=function(){if(e)f.apply(this,arguments);else{var n=this,t=arguments;setTimeout(function(){f.apply(n,t)},0)}}),"onload"in r?r.onload=o:r.onreadystatechange=function(){r.readyState===4&&o()},r.onerror=function(n){t.call(this,n||!0,null);t=function(){}},r.onprogress=function(){},r.ontimeout=function(n){t.call(this,n,null);t=function(){}},r.onabort=function(n){t.call(this,n,null);t=function(){}},r.open("GET",n,!0),r.send(null),e=!0,r)}typeof t!="undefined"&&(t.exports=i)},{}],6:[function(n,t){function u(n){return!!n.match(/(Lat)(itude)?/gi)}function f(n){return!!n.match(/(L)(on|ng)(gitude)?/i)}function e(n){return typeof n=="object"?Object.keys(n).length:0}function o(n){var t=[];return[",",";","\t","|"].forEach(function(r){var u=i(r).parse(n),o,f;if(u.length>=1){for(o=e(u[0]),f=0;f<u.length;f++)if(e(u[f])!==o)return;t.push({delimiter:r,arity:Object.keys(u[0]).length})}}),t.length?t.sort(function(n,t){return t.arity-n.arity})[0].delimiter:null}function s(n){var t=o(n);return t?i(t).parse(n):null}function h(n,t,e){var s,v,b,tt,y,h,p,w,k,d,a;e||(e=t,t={});t.delimiter=t.delimiter||",";var l=t.latfield||"",c=t.lonfield||"",g=[],nt={type:"FeatureCollection",features:g};if(t.delimiter==="auto"&&typeof n=="string"&&(t.delimiter=o(n),!t.delimiter))return e({type:"Error",message:"Could not autodetect delimiter"});if(s=typeof n=="string"?i(t.delimiter).parse(n):n,!s.length)return e(null,nt);if(!l||!c){for(v in s[0])!l&&u(v)&&(l=v),!c&&f(v)&&(c=v);if(!l||!c){b=[];for(tt in s[0])b.push(tt);return e({type:"Error",message:"Latitude and longitude fields not present",data:s,fields:b})}}for(y=[],h=0;h<s.length;h++)s[h][c]!==undefined&&s[h][c]!==undefined&&(p=s[h][c],w=s[h][l],a=r(p,"EW"),a&&(p=a),a=r(w,"NS"),a&&(w=a),k=parseFloat(p),d=parseFloat(w),isNaN(k)||isNaN(d)?y.push({message:"A row contained an invalid value for latitude or longitude",row:s[h]}):(t.includeLatLon||(delete s[h][c],delete s[h][l]),g.push({type:"Feature",properties:s[h],geometry:{type:"Point",coordinates:[parseFloat(k),parseFloat(d)]}})));e(y.length?y:null,nt)}function c(n){for(var t=n.features,i={type:"Feature",geometry:{type:"LineString",coordinates:[]}},r=0;r<t.length;r++)i.geometry.coordinates.push(t[r].geometry.coordinates);return i.properties=t[0].properties,{type:"FeatureCollection",features:[i]}}function l(n){for(var t=n.features,i={type:"Feature",geometry:{type:"Polygon",coordinates:[[]]}},r=0;r<t.length;r++)i.geometry.coordinates[0].push(t[r].geometry.coordinates);return i.properties=t[0].properties,{type:"FeatureCollection",features:[i]}}var i=n("dsv"),r=n("sexagesimal");t.exports={isLon:f,isLat:u,csv:i.csv.parse,tsv:i.tsv.parse,dsv:i,auto:s,csv2geojson:h,toLine:c,toPolygon:l}},{dsv:7,sexagesimal:8}],7:[function(n,t){var i=n("fs");t.exports=new Function('dsv.version = "0.0.3";\n\ndsv.tsv = dsv("\\t");\ndsv.csv = dsv(",");\n\nfunction dsv(delimiter) {\n  var dsv = {},\n      reFormat = new RegExp("[\\"" + delimiter + "\\n]"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  dsv.parse = function(text, f) {\n    var o;\n    return dsv.parseRows(text, function(row, i) {\n      if (o) return o(row, i - 1);\n      var a = new Function("d", "return {" + row.map(function(name, i) {\n        return JSON.stringify(name) + ": d[" + i + "]";\n      }).join(",") + "}");\n      o = f ? function(row, i) { return f(a(row), i); } : a;\n    });\n  };\n\n  dsv.parseRows = function(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        var c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.substring(j + 1, i).replace(/""/g, "\\"");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var c = text.charCodeAt(I++), k = 1;\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.substring(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.substring(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && !(a = f(a, n++))) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  };\n\n  dsv.format = function(rows) {\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\n    var fieldSet = {}, fields = [];\n\n    // Compute unique fields in order of discovery.\n    rows.forEach(function(row) {\n      for (var field in row) {\n        if (!(field in fieldSet)) {\n          fields.push(fieldSet[field] = field);\n        }\n      }\n    });\n\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return fields.map(function(field) {\n        return formatValue(row[field]);\n      }).join(delimiter);\n    })).join("\\n");\n  };\n\n  dsv.formatRows = function(rows) {\n    return rows.map(formatRow).join("\\n");\n  };\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return reFormat.test(text) ? "\\"" + text.replace(/\\"/g, "\\"\\"") + "\\"" : text;\n  }\n\n  return dsv;\n}\n;return dsv')()},{fs:2}],8:[function(n,t){t.exports=function(n,t){if(t||(t="NSEW"),typeof n!="string")return null;var i=n.match(/^([0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|"|”|″) *)?([NSEW])?/);return i?i[4]&&t.indexOf(i[4])===-1?null:((i[1]?parseFloat(i[1]):0)+(i[2]?parseFloat(i[2])/60:0)+(i[3]?parseFloat(i[3])/3600:0))*(i[4]&&i[4]==="S"||i[4]==="W"?-1:1):null}},{}],9:[function(n,t){function i(n,t){n=Math.round(n*t);n<<=1;n<0&&(n=~n);for(var i="";n>=32;)i+=String.fromCharCode((32|n&31)+63),n>>=5;return i+String.fromCharCode(n+63)}var r={};r.decode=function(n,t){for(var f=0,e=0,o=0,s=[],u=0,i=0,r=null,h,c,l=Math.pow(10,t||5);f<n.length;){r=null;u=0;i=0;do r=n.charCodeAt(f++)-63,i|=(r&31)<<u,u+=5;while(r>=32);h=i&1?~(i>>1):i>>1;u=i=0;do r=n.charCodeAt(f++)-63,i|=(r&31)<<u,u+=5;while(r>=32);c=i&1?~(i>>1):i>>1;e+=h;o+=c;s.push([e/l,o/l])}return s};r.encode=function(n,t){var r,f,u,e,o;if(!n.length)return"";for(r=Math.pow(10,t||5),f=i(n[0][0],r)+i(n[0][1],r),u=1;u<n.length;u++)e=n[u],o=n[u-1],f+=i(e[0]-o[0],r),f+=i(e[1]-o[1],r);return f};typeof t!==undefined&&(t.exports=r)},{}],10:[function(n,t,i){(function(r){toGeoJSON=function(){"use strict";function w(n){if(!n||!n.length)return 0;for(var i=0,t=0;i<n.length;i++)t=(t<<5)-t+n.charCodeAt(i)|0;return t}function f(n,t){return n.getElementsByTagName(t)}function e(n,t){return n.getAttribute(t)}function s(n,t){return parseFloat(e(n,t))}function t(n,t){var i=f(n,t);return i.length?i[0]:null}function b(n){return n.normalize&&n.normalize(),n}function h(n){for(var t=0,i=[];t<n.length;t++)i[t]=parseFloat(n[t]);return i}function k(n){var i={};for(var t in n)n[t]&&(i[t]=n[t]);return i}function u(n){return n&&b(n),n&&n.firstChild&&n.firstChild.nodeValue||""}function c(n){return h(n.split(","))}function l(n){for(var i=n.replace(y,"").split(p),r=[],t=0;t<i.length;t++)r.push(c(i[t]));return r}function a(n){var i=[s(n,"lon"),s(n,"lat")],r=t(n,"ele"),f=t(n,"time");return r&&i.push(parseFloat(u(r))),{coordinates:i,time:f?u(f):null}}function v(){return{type:"FeatureCollection",features:[]}}function d(n){return n.xml!==undefined?n.xml:o.serializeToString(n)}var y=/^\s*|\s*$/g,p=/\s+/,o;return typeof XMLSerializer!="undefined"?o=new XMLSerializer:typeof i!="object"||typeof r!="object"||r.browser||(o=new(n("xmldom").XMLSerializer)),{kml:function(n){function tt(n){var t,i;return n=n||"",n.substr(0,1)==="#"&&(n=n.substr(1)),(n.length===6||n.length===3)&&(t=n),n.length===8&&(i=parseInt(n.substr(0,2),16)/255,t=n.substr(2)),[t,isNaN(i)?undefined:i]}function it(n){return h(n.split(" "))}function rt(n){var i=f(n,"coord","gx"),e=[],o=[],r,t;for(i.length===0&&(i=f(n,"gx:coord")),t=0;t<i.length;t++)e.push(it(u(i[t])));for(r=f(n,"when"),t=0;t<r.length;t++)o.push(u(r[t]));return{coords:e,times:o}}function y(n){var e,s,r,h,a,o=[],b=[],p,w,v;if(t(n,"MultiGeometry"))return y(t(n,"MultiGeometry"));if(t(n,"MultiTrack"))return y(t(n,"MultiTrack"));if(t(n,"gx:MultiTrack"))return y(t(n,"gx:MultiTrack"));for(r=0;r<i.length;r++)if(s=f(n,i[r]),s)for(h=0;h<s.length;h++)if(e=s[h],i[r]=="Point")o.push({type:"Point",coordinates:c(u(t(e,"coordinates")))});else if(i[r]=="LineString")o.push({type:"LineString",coordinates:l(u(t(e,"coordinates")))});else if(i[r]=="Polygon"){for(p=f(e,"LinearRing"),w=[],a=0;a<p.length;a++)w.push(l(u(t(p[a],"coordinates"))));o.push({type:"Polygon",coordinates:w})}else(i[r]=="Track"||i[r]=="gx:Track")&&(v=rt(e),o.push({type:"LineString",coordinates:v.coords}),v.times.length&&b.push(v.times));return{geoms:o,coordTimes:b}}function ut(n){var s=y(n),o,i={},ut=u(t(n,"name")),h=u(t(n,"styleUrl")),ft=u(t(n,"description")),w=t(n,"TimeSpan"),k=t(n,"ExtendedData"),d=t(n,"LineStyle"),c=t(n,"PolyStyle"),et,l,g,nt,it,ot,st,a,v,rt;if(!s.geoms.length)return[];if(et=function(n,t){var i=u(t);n[t.nodeName]=t.nodeName=="color"&&i?"#"+i.substr(6,2)+i.substr(4,2)+i.substr(2,2):i},l=function(n,t){if(t){if(t.nodeName=="#text")return;t.childElementCount>0?(n[t.nodeName]={},$.each(t.childNodes,function(){l(n[t.nodeName],this)})):et(n,t)}},l(i,t(n,"Style")),g=function(n){if(n&&r.length>0){var t=$.grep(r,function(t){return t.getAttribute("id")&&"#"+t.getAttribute("id").replace("-normal","")==n});t.length>0&&l(i,t[0])}},i.Style||g(h),!i.Style&&h&&b&&b.length>0&&(nt=$.grep(b,function(n){return n.getAttribute("id")&&"#"+n.getAttribute("id").replace("-normal","")==h}),nt.length>0&&(it=t(nt[0],"styleUrl"),it&&g(u(it)))),ut&&(i.name=ut),h&&p[h]&&(i.styleUrl=h,i.styleHash=p[h]),ft&&(i.description=ft),w&&(ot=u(t(w,"begin")),st=u(t(w,"end")),i.timespan={begin:ot,end:st}),d){var ht=tt(u(t(d,"color"))),ct=ht[0],lt=ht[1],at=parseFloat(u(t(d,"width")));ct&&(i.stroke=ct);isNaN(lt)||(i["stroke-opacity"]=lt);isNaN(at)||(i["stroke-width"]=at)}if(c){var vt=tt(u(t(c,"color"))),yt=vt[0],pt=vt[1],wt=u(t(c,"fill")),bt=u(t(c,"outline"));yt&&(i.fill=yt);isNaN(pt)||(i["fill-opacity"]=pt);wt&&(i["fill-opacity"]=wt==="1"?1:0);bt&&(i["stroke-opacity"]=bt==="1"?1:0)}if(k){for(a=f(k,"Data"),v=f(k,"SimpleData"),o=0;o<a.length;o++)i[a[o].getAttribute("name")]=u(t(a[o],"value"));for(o=0;o<v.length;o++)i[v[o].getAttribute("name")]=u(v[o])}return s.coordTimes.length&&(i.coordTimes=s.coordTimes.length===1?s.coordTimes[0]:s.coordTimes),rt={type:"Feature",geometry:s.geoms.length===1?s.geoms[0]:{type:"GeometryCollection",geometries:s.geoms},properties:i},e(n,"id")&&(rt.id=e(n,"id")),[rt]}for(var s,k,a,g=v(),p={},i=["Polygon","LineString","Point","Track","gx:Track"],nt=f(n,"Placemark"),r=f(n,"Style"),b=f(n,"StyleMap"),o=0;o<r.length;o++)p["#"+e(r[o],"id")]=w(d(r[o])).toString(16);for(s=0;s<nt.length;s++)for(k=ut(nt[s]),a=0;a<k.length;a++)g.features.push(k[a]);return g},gpx:function(n){function l(n,t){var u=f(n,t),e=[],o=[],s=u.length,i,r;if(!(s<2)){for(i=0;i<s;i++)r=a(u[i]),e.push(r.coordinates),r.time&&o.push(r.time);return{line:e,times:o}}}function y(n){for(var e,s=f(n,"trkseg"),t=[],r=[],i,u=0;u<s.length;u++)i=l(s[u],"trkpt"),i.line&&t.push(i.line),i.times.length&&r.push(i.times);if(t.length!==0)return e=o(n),r.length&&(e.coordTimes=t.length===1?r[0]:r),{type:"Feature",properties:e,geometry:{type:t.length===1?"LineString":"MultiLineString",coordinates:t.length===1?t[0]:t}}}function p(n){var t=l(n,"rtept"),i;if(t)return i={type:"Feature",properties:o(n),geometry:{type:"LineString",coordinates:t}},t.times.length&&(i.geometry.times=t.times),i}function w(n){var i=o(n);return i.sym=u(t(n,"sym")),{type:"Feature",properties:i,geometry:{type:"Point",coordinates:a(n).coordinates}}}function o(n){for(var r=["name","desc","author","copyright","link","time","keywords"],f={},i=0;i<r.length;i++)f[r[i]]=u(t(n,r[i]));return k(f)}for(var s=f(n,"trk"),h=f(n,"rte"),c=f(n,"wpt"),e=v(),r,i=0;i<s.length;i++)r=y(s[i]),r&&e.features.push(r);for(i=0;i<h.length;i++)r=p(h[i]),r&&e.features.push(r);for(i=0;i<c.length;i++)e.features.push(w(c[i]));return e}}}();typeof t!="undefined"&&(t.exports=toGeoJSON)}).call(this,n("_process"))},{_process:4,xmldom:3}],11:[function(i,r){!function(){function e(n,t){function s(t){var r=n.arcs[t<0?~t:t],u=r[0],i;return n.transform?(i=[0,0],r.forEach(function(n){i[0]+=n[0];i[1]+=n[1]})):i=r[r.length-1],t<0?[i,u]:[u,i]}function o(n,t){var r,i;for(r in n)i=n[r],delete t[i.start],delete i.start,delete i.end,i.forEach(function(n){f[n<0?~n:n]=1}),u.push(i)}var f={},i={},r={},u=[],e=-1;return t.forEach(function(i,r){var u=n.arcs[i<0?~i:i],f;u.length<3&&!u[1][0]&&!u[1][1]&&(f=t[++e],t[e]=i,t[r]=f)}),t.forEach(function(n){var c=s(n),f=c[0],e=c[1],t,u,o,h;(t=r[f])?(delete r[t.end],t.push(n),t.end=e,(u=i[e])?(delete i[u.start],o=u===t?t:t.concat(u),i[o.start=t.start]=r[o.end=u.end]=o):i[t.start]=r[t.end]=t):(t=i[e])?(delete i[t.start],t.unshift(n),t.start=f,(u=r[f])?(delete r[u.end],h=u===t?t:u.concat(t),i[h.start=u.start]=r[h.end=t.end]=h):i[t.start]=r[t.end]=t):(t=[n],i[t.start=f]=r[t.end=e]=t)}),o(r,i),o(i,r),t.forEach(function(n){f[n<0?~n:n]||u.push([n])}),u}function o(n,t,i){var r=[],u,h,s,f,a;if(arguments.length>1){u=[];function v(n){var t=n<0?~n:n;(u[t]||(u[t]=[])).push({i:n,g:h})}function c(n){n.forEach(v)}function o(n){n.forEach(c)}function l(n){n.type==="GeometryCollection"?n.geometries.forEach(l):n.type in s&&(h=n,s[n.type](n.arcs))}s={LineString:c,MultiLineString:o,Polygon:o,MultiPolygon:function(n){n.forEach(o)}};l(t);u.forEach(arguments.length<3?function(n){r.push(n[0].i)}:function(n){i(n[0].g,n[n.length-1].g)&&r.push(n[0].i)})}else for(f=0,a=n.arcs.length;f<a;++f)r.push(f);return{type:"MultiLineString",arcs:e(n,r)}}function s(t,r){function s(n){n.forEach(function(t){t.forEach(function(t){(u[t=t<0?~t:t]||(u[t]=[])).push(n)})});f.push(n)}function h(n){return b(i(t,{type:"Polygon",arcs:[n]}).coordinates[0])>0}var u={},f=[],o=[];return r.forEach(function(n){n.type==="Polygon"?s(n.arcs):n.type==="MultiPolygon"&&n.arcs.forEach(s)}),f.forEach(function(n){if(!n._){var t=[],i=[n];for(n._=1,o.push(t);n=i.pop();)t.push(n),n.forEach(function(n){n.forEach(function(n){u[n<0?~n:n].forEach(function(n){n._||(n._=1,i.push(n))})})})}}),f.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:o.map(function(i){var r=[],o,f,s;if(i.forEach(function(n){n.forEach(function(n){n.forEach(function(n){u[n<0?~n:n].length<2&&r.push(n)})})}),r=e(t,r),(n=r.length)>1)for(o=h(i[0][0]),f=0;f<n;++f)if(o===h(r[f])){s=r[0];r[0]=r[f];r[f]=s;break}return r})}}function v(n,t){return t.type==="GeometryCollection"?{type:"FeatureCollection",features:t.geometries.map(function(t){return h(n,t)})}:h(n,t)}function h(n,t){var r={type:"Feature",id:t.id,properties:t.properties||{},geometry:i(n,t)};return t.id==null&&delete r.id,r}function i(n,t){function h(n,t){t.length&&t.pop();for(var u=s[n<0?~n:n],i=0,f=u.length,e;i<f;++i)t.push(e=u[i].slice()),r(e,i);n<0&&y(t,f)}function u(n){return n=n.slice(),r(n,0),n}function i(n){for(var t=[],i=0,r=n.length;i<r;++i)h(n[i],t);return t.length<2&&t.push(t[0].slice()),t}function c(n){for(var t=i(n);t.length<4;)t.push(t[0].slice());return t}function f(n){return n.map(c)}function e(n){var t=n.type;return t==="GeometryCollection"?{type:t,geometries:n.geometries.map(e)}:t in o?{type:t,coordinates:o[t](n)}:null}var r=l(n.transform),s=n.arcs,o={Point:function(n){return u(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(u)},LineString:function(n){return i(n.arcs)},MultiLineString:function(n){return n.arcs.map(i)},Polygon:function(n){return f(n.arcs)},MultiPolygon:function(n){return n.arcs.map(f)}};return e(t)}function y(n,t){for(var u,i=n.length,r=i-t;r<--i;)u=n[r],n[r++]=n[i],n[i]=u}function c(n,t){for(var i=0,u=n.length,r;i<u;)r=i+u>>>1,n[r]<t?i=r+1:u=r;return i}function p(n){function a(n,t){n.forEach(function(n){n<0&&(n=~n);var i=f[n];i?i.push(t):f[n]=[t]})}function h(n,t){n.forEach(function(n){a(n,t)})}function v(n,t){n.type==="GeometryCollection"?n.geometries.forEach(function(n){v(n,t)}):n.type in y&&y[n.type](n.arcs,t)}var f={},s=n.map(function(){return[]}),y={LineString:a,MultiLineString:h,Polygon:h,MultiPolygon:function(n,t){n.forEach(function(n){h(n,t)})}},t,o,r,u,i;n.forEach(v);for(t in f)for(var l=f[t],p=l.length,e=0;e<p;++e)for(o=e+1;o<p;++o)r=l[e],u=l[o],(i=s[r])[t=c(i,u)]!==u&&i.splice(t,0,u),(i=s[u])[t=c(i,r)]!==r&&i.splice(t,0,r);return s}function w(n,t){function o(n){f.remove(n);n[1][2]=t(n);f.push(n)}var s=l(n.transform),h=g(n.transform),f=d(),e=0,i,r,u;for(t||(t=k),n.arcs.forEach(function(n){var u=[],r,e;for(n.forEach(s),r=1,e=n.length-1;r<e;++r)i=n.slice(r-1,r+2),i[1][2]=t(i),u.push(i),f.push(i);for(n[0][2]=n[e][2]=Infinity,r=0,e=u.length;r<e;++r)i=u[r],i.previous=u[r-1],i.next=u[r+1]});i=f.pop();)r=i.previous,u=i.next,i[1][2]<e?i[1][2]=e:e=i[1][2],r&&(r.next=u,r[2]=i[2],o(r)),u&&(u.previous=r,u[0]=i[0],o(u));return n.arcs.forEach(function(n){n.forEach(h)}),n}function b(n){for(var r=-1,u=n.length,i,t=n[u-1],f=0;++r<u;)i=t,t=n[r],f+=i[0]*t[1]-i[1]*t[0];return f*.5}function k(n){var t=n[0],i=n[1],r=n[2];return Math.abs((t[0]-r[0])*(i[1]-t[1])-(t[0]-i[0])*(r[1]-t[1]))}function u(n,t){return n[1][2]-t[1][2]}function d(){function r(t,i){while(i>0){var f=(i+1>>1)-1,r=n[f];if(u(t,r)>=0)break;n[r._=i]=r;n[t._=i=f]=t}}function f(i,r){for(;;){var o=r+1<<1,s=o-1,e=r,f=n[e];if(s<t&&u(n[s],f)<0&&(f=n[e=s]),o<t&&u(n[o],f)<0&&(f=n[e=o]),e===r)break;n[f._=r]=f;n[i._=r=e]=i}}var i={},n=[],t=0;return i.push=function(i){return r(n[i._=t]=i,t++),t},i.pop=function(){if(!(t<=0)){var r=n[0],i;return--t>0&&(i=n[t],f(n[i._=0]=i,0)),r}},i.remove=function(i){var e=i._,o;if(n[e]===i)return e!==--t&&(o=n[t],(u(o,i)<0?r:f)(n[o._=e]=o,e)),e},i}function l(n){if(!n)return a;var t,i,r=n.scale[0],u=n.scale[1],f=n.translate[0],e=n.translate[1];return function(n,o){o||(t=i=0);n[0]=(t+=n[0])*r+f;n[1]=(i+=n[1])*u+e}}function g(n){if(!n)return a;var t,i,r=n.scale[0],u=n.scale[1],f=n.translate[0],e=n.translate[1];return function(n,o){o||(t=i=0);var s=(n[0]-f)/r|0,h=(n[1]-e)/u|0;n[0]=s-t;n[1]=h-i;t=s;i=h}}function a(){}var f={version:"1.6.8",mesh:function(n){return i(n,o.apply(this,arguments))},meshArcs:o,merge:function(n){return i(n,s.apply(this,arguments))},mergeArcs:s,feature:v,neighbors:p,presimplify:w};typeof t=="function"&&t.amd?t(f):typeof r=="object"&&r.exports?r.exports=f:this.topojson=f}()},{}],12:[function(n,t){function r(n){function t(t){var i=n.substring(o).match(t);return i?(o+=i[0].length,i[0]):null}function c(n){return n&&e.match(/\d+/)&&(n.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+e}}),n}function r(){t(/^\s*/)}function u(){r();for(var e=0,o=[],u=[o],n=o,f;f=t(/^(\()/)||t(/^(\))/)||t(/^(\,)/)||t(i);){if(f=="(")u.push(n),n=[],u[u.length-1].push(n),e++;else if(f==")"){if(n=u.pop(),!n)return;if(e--,e===0)break}else if(f===",")n=[],u[u.length-1].push(n);else{if(isNaN(parseFloat(f)))return null;n.push(parseFloat(f))}r()}return e!==0?null:o}function s(){for(var u=[],n,f;f=t(i)||t(/^(\,)/);)f==","?(u.push(n),n=[]):(n||(n=[]),n.push(parseFloat(f))),r();return n&&u.push(n),u.length?u:null}function l(){if(!t(/^(point)/i)||(r(),!t(/^(\()/)))return null;var n=s();return n?(r(),!t(/^(\))/))?null:{type:"Point",coordinates:n[0]}:null}function a(){if(!t(/^(multipoint)/i))return null;r();var n=u();return n?(r(),{type:"MultiPoint",coordinates:n}):null}function v(){if(!t(/^(multilinestring)/i))return null;r();var n=u();return n?(r(),{type:"MultiLineString",coordinates:n}):null}function y(){if(!t(/^(linestring)/i)||(r(),!t(/^(\()/)))return null;var n=s();return n?t(/^(\))/)?{type:"LineString",coordinates:n}:null:null}function p(){return t(/^(polygon)/i)?(r(),{type:"Polygon",coordinates:u()}):null}function w(){return t(/^(multipolygon)/i)?(r(),{type:"MultiPolygon",coordinates:u()}):null}function b(){var n=[],i;if(!t(/^(geometrycollection)/i)||(r(),!t(/^(\()/)))return null;while(i=h())n.push(i),r(),t(/^(\,)/),r();return t(/^(\))/)?{type:"GeometryCollection",geometries:n}:null}function h(){return l()||y()||p()||a()||v()||w()||b()}var f=n.split(";"),n=f.pop(),e=(f.shift()||"").split("=").pop(),o=0;return c(h())}function u(n){function r(n){return n.length===2?n[0]+" "+n[1]:n.length===3?n[0]+" "+n[1]+" "+n[2]:void 0}function t(n){return n.map(r).join(", ")}function i(n){return n.map(t).map(f).join(", ")}function e(n){return n.map(i).map(f).join(", ")}function f(n){return"("+n+")"}n.type==="Feature"&&(n=n.geometry);switch(n.type){case"Point":return"POINT ("+r(n.coordinates)+")";case"LineString":return"LINESTRING ("+t(n.coordinates)+")";case"Polygon":return"POLYGON ("+i(n.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+t(n.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+e(n.coordinates)+")";case"MultiLineString":return"MULTILINESTRING ("+i(n.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+n.geometries.map(u).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input");}}t.exports=r;t.exports.parse=r;t.exports.stringify=u;var i=/^[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/},{}]},{},[1])(1)});